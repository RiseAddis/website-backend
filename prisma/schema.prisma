datasource db {
  provider = "mongodb"
  url      = env("MONGODB")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String   @unique
  password String
  role Role? @default(user)
  article Article[]
  articleIds String[]
}

model Unit {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  bathroom Int?
  bedroom Int?
  balcony Boolean?
  images String[]
  netArea Float?
  commonArea Float?
  totalArea Float?
  // payments Payment[]
  available Int?
  total Int?
  price String?

  site Site @relation(fields: [siteId], references: [id])
  siteId String @db.ObjectId

  status Status @default(draft)
}

model Site {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  link String
  description String?
  location String?
  footPrintArea Float?
  builtUpArea Float?
  floors Int?
  basementCount Int?
  parkingLots String?
  studios Int?
  oneBedrooms Int?
  twoBedrooms Int?
  threeBedrooms Int?
  numberOfUnits Int?
  buildingType String?
  apartmentSizes String?
  images String[]
  stage String?
  price Int?
  amenities Amenity[]
  deliveryTime String?
  featured Boolean @default(false)

  payments Payment[] @relation(fields: [paymentIds], references: [id])
  paymentIds String[] @db.ObjectId 

  units Unit[]
  
  realEstate RealEstate @relation(fields: [realEstateId], references: [id])
  realEstateId String @db.ObjectId
  
  status Status @default(draft)
}

model RealEstate {
  id   String   @id @default(auto()) @map("_id") @db.ObjectId
  name String
  link String
  images String[]
  background String?
  sisterCompanies String[]
  previousProjects String[]
  activeProjects String[]
  currency Currency @default(etb)

  sites Site[]

  status Status @default(draft)
}

model Amenity {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  image ImageGallery @relation(fields: [imageId], references: [id])
  imageId String @db.ObjectId

  site Site @relation(fields: [siteId], references: [id])
  siteId String @db.ObjectId
}

model ImageGallery {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @default("")
  imageUrl String

  amemity Amenity[]
}

model Payment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  paymentType PaymentType @relation(fields: [paymentTypeId], references: [id])
  paymentTypeId String @db.ObjectId

  list PaymentList[]

  sites Site[] @relation(fields: [siteIds], references: [id])
  siteIds String[] @db.ObjectId
}

model PaymentType {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  payments Payment[]
}

enum Role {
  admin
  user
}

enum Status {
  draft
  active
  inactive
}

type PaymentList {
  name String
  value String
}

model Article {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  link String
  paragraphs String[]
  imageUrl String?

  status ArticleStatus @default(draft)

  author User @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ArticleStatus {
  draft
  published
}

enum Currency {
  etb
  usd
  euro
  gbp
}